function getRandomElement(array) {
  return array[Math.floor(Math.random() * array.length)];
}

function getRandomString(length) {
  const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
  let result = '';
  for (let i = 0; i < length; i++) {
    result += characters.charAt(Math.floor(Math.random() * characters.length));
  }
  return result;
}

const predefinedValues = {
  mes: ['LEMES', 'SEMES', 'REMES'],
  mt: ['M75T', 'M70T', 'M80T'],
  ins: ['ins1', 'ins2', 'ins3'],
  cn: ['cn1', 'cn2', 'cn3'],
  op: ['UNIT-ASM3', 'UNIT-ASM4', 'UNIT-ASM5'],
  pop: ['KITTING3', 'KITTING4', 'KITTING5'],
  ln: ['I020', 'I021', 'I022'],
  ai: ['KP1', 'KP2', 'KP3'],
  cl: ['cl1', 'cl2', 'cl3'],
  co: ['c01', 'c02', 'c03'],
  so: ['so1', 'so2', 'so3'],
  sd: ['sd1', 'sd2', 'sd3'],
  dd: ['dd1', 'dd2', 'dd3'],
  ds: ['ds1', 'ds2', 'ds3'],
  line: ['L1', 'L2', 'L3'],
  stage: ['UNIT-ASM3', '2', '3'],
};

const sampFunction = () => {
  const mt = 'M70T';
  const sn = `PG${getRandomString(6)}`;
  const pi = getRandomString(10);

  const ids = `1S${pi + sn}`;

  const sampleData = {
    mes: getRandomElement(predefinedValues.mes),
    mm: getRandomString(3),
    mt,
    mo: getRandomString(12),
    sn,
    ins: getRandomElement(predefinedValues.ins),
    ids,
    cn: getRandomElement(predefinedValues.cn),
    op: 'FVT',
    ro: getRandomString(12),
    pop: 'KITTING3',
    ln: getRandomElement(predefinedValues.ln),
    ai: getRandomElement(predefinedValues.ai),
    cl: getRandomElement(predefinedValues.cl),
    co: getRandomElement(predefinedValues.co),
    pi,
    so: getRandomElement(predefinedValues.so),
    sd: getRandomElement(predefinedValues.sd),
    dd: getRandomElement(predefinedValues.dd),
    d: new Date(),
    k: new Date(),
    qo: String(Math.floor(Math.random() * 100)), // Random number as a string
    st: new Date(),
    ds: getRandomElement(predefinedValues.ds),
    line: 'L1',
    stage: 'FVT',
  };

  return sampleData;
};

// const sampleData = [
//   {
//     mes: 'LEMES',
//     mm: 'S0V',
//     mt: '11T3',
//     mo: 'L9N023103009',
//     sn: 'PG03MQD5',
//     ins: 'ins1',
//     ids: '1S11T3S0V900PG03MQD5',
//     cn: 'cn1',
//     op: 'UNIT-ASM3',
//     ro: 'L9N023103009',
//     pop: 'KITTING3',
//     ln: 'I020',
//     ai: 'KP1',
//     cl: 'cl1',
//     co: 'c01',
//     pi: '11T3S0V900',
//     so: 'so1',
//     sd: 'sd1',
//     dd: 'dd1',
//     d: new Date(),
//     k: new Date(),
//     qo: '45',
//     st: new Date(),
//     ds: 'ds1',
//     line: '1',
//     stage: '1',
//   },
//   {
//     mes: 'LEMES',
//     mm: 'S0V',
//     mt: '11T4',
//     mo: 'L9N023103001',
//     sn: 'PG03MQD6',
//     ins: 'ins1',
//     ids: '1S11T3S0V900PG03MQD6',
//     cn: 'cn1',
//     op: 'UNIT-ASM2',
//     ro: 'L9N02310300910',
//     pop: 'KITTING3',
//     ln: 'I0200',
//     ai: 'KP1',
//     cl: 'cl1',
//     co: 'c01',
//     pi: '11T3S0V9000',
//     so: 'so1',
//     sd: 'sd1',
//     dd: 'dd1',
//     d: new Date(),
//     k: new Date(),
//     qo: '45',
//     st: new Date(),
//     ds: 'ds1',
//     line: '1',
//     stage: '1',
//   },
//   {
//     mes: 'LEMES',
//     mm: 'S0V',
//     mt: '11T3',
//     mo: 'L9N023103009',
//     sn: 'PG03MQD5',
//     ins: 'ins1',
//     ids: '1S11T3S0V900PG03MQD5',
//     cn: 'cn1',
//     op: 'UNIT-ASM3',
//     ro: 'L9N023103009',
//     pop: 'KITTING3',
//     ln: 'I020',
//     ai: 'KP1',
//     cl: 'cl1',
//     co: 'c01',
//     pi: '11T3S0V900',
//     so: 'so1',
//     sd: 'sd1',
//     dd: 'dd1',
//     d: new Date(),
//     k: new Date(),
//     qo: '45',
//     st: new Date(),
//     ds: 'ds1',
//     line: '1',
//     stage: '1',
//   },
//   {
//     mes: 'LEMES',
//     mm: 'S0V',
//     mt: '11T3',
//     mo: 'L9N023103009',
//     sn: 'PG03MQD5',
//     ins: 'ins1',
//     ids: '1S11T3S0V900PG03MQD5',
//     cn: 'cn1',
//     op: 'UNIT-ASM3',
//     ro: 'L9N023103009',
//     pop: 'KITTING3',
//     ln: 'I020',
//     ai: 'KP1',
//     cl: 'cl1',
//     co: 'c01',
//     pi: '11T3S0V900',
//     so: 'so1',
//     sd: 'sd1',
//     dd: 'dd1',
//     d: new Date(),
//     k: new Date(),
//     qo: '45',
//     st: new Date(),
//     ds: 'ds1',
//     line: '1',
//     stage: '1',
//   },
//   {
//     mes: 'LEMES',
//     mm: 'S0V',
//     mt: '11T3',
//     mo: 'L9N023103009',
//     sn: 'PG03MQD5',
//     ins: 'ins1',
//     ids: '1S11T3S0V900PG03MQD5',
//     cn: 'cn1',
//     op: 'UNIT-ASM3',
//     ro: 'L9N023103009',
//     pop: 'KITTING3',
//     ln: 'I020',
//     ai: 'KP1',
//     cl: 'cl1',
//     co: 'c01',
//     pi: '11T3S0V900',
//     so: 'so1',
//     sd: 'sd1',
//     dd: 'dd1',
//     d: new Date(),
//     k: new Date(),
//     qo: '45',
//     st: new Date(),
//     ds: 'ds1',
//     line: '1',
//     stage: '1',
//   },
// ];

module.exports = sampFunction;
